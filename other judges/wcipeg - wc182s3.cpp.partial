//============================================================================
// Name        : Multitasking.cpp
// Author      : Daxi the Taxi
// Version     :
// Copyright   : ALL YOUR CODE IS BELONG TO US
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> p;

int n, k, factorials[12];
double weights[100];

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> n >> k;

	factorials[0] = 1;
	for (int i = 1; i < 12; ++i) {
		factorials[i] = factorials[i - 1] * i;
	}

	int maxcut = n << 1, total = n << 1;

	weights[0] = 1.;

	for (int i = 1; i <= total; ++i) {
		double chance = (double)(factorials[total] / factorials[i] / factorials[total - i]);

		weights[i] = weights[0] / chance;
	}

	printf("weights: ");
	for (int i = 0; i < n * 2; ++i) {
		printf("%f, ", weights[i]);
	}
	printf("\n");

	int maxsub = 1 << n << n;
	double sum = 0;

	for (int i = 0; i < maxsub; ++i) {
		int defused = 0;

		for (int j = 0; j < n * 2; j += 2) {
			if((i & (1 << j)) && (i & (2 << j))){
				defused++;
			}
		}

		if(defused != k){
			continue;
		}

		int csum = 0;

		for (int k = 0; k < n * 2; ++k) {
			if(!(i & (1 << k))){
				csum++;
			}
		}

		int cut = n * 2 - csum;

		printf("found case with %d cut sub=%d defused=%d\n", cut, i, defused);
		sum += csum * weights[cut];
	}

	printf("%.10f\n", sum);
}

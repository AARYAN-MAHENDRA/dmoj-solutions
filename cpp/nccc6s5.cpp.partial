//============================================================================
// Name        : PusheenEatsEvenMoreSushi.cpp
// Author      : Daxi the Taxi
// Version     :
// Copyright   : ALL YOUR CODE IS BELONG TO US
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

struct ed{
	int v, w;

	ed(int v0, int w0) : v(v0), w(w0){}
	ed() : v(-1), w(-1){}
};

const int MAX = 50001, MB = 16;
int n, m, q, ba, bb, bc,
	par[MB][MAX], dis[MAX], lv[MAX];
vector<ed> matrix[MAX];

void dfs(int cur, int parr, int diss, int lvl){
	dis[cur] = diss;
	lv[cur] = lvl;
	par[0][cur] = parr;

	for(ed adj : matrix[cur]){
		if(adj.v != parr) dfs(adj.v, cur, diss + adj.w, lvl + 1);
	}
}

int qu(int a, int b){
	if(a == b) return a;

	if(lv[a] > lv[b]) swap(a, b);

	int delta = lv[b] - lv[a];
	for(int i = MB - 1; i >= 0; i--){
		if(delta & (1 << i)) b = par[i][b];
	}

	if(a == b) return a;

	for(int i = MB - 1; i >= 0; i--){
		if(par[i][a] != par[i][b] && par[i][a] != -1 && par[i][b] != -1){
			a = par[i][a];
			b = par[i][b];
		}
	}

	return par[0][a];
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> n >> m;

	for (int i = 0; i < m; ++i) {
		cin >> ba >> bb >> bc;

		matrix[ba].emplace_back(bb, bc);
		matrix[bb].emplace_back(ba, bc);
	}

	memset(par, -1, sizeof par);
	dfs(1, -1, 0, 0);

	for(int i = 1; i < MB; i++){
		for (int j = 1; j <= n; ++j) {
			int pa = par[i - 1][j];
			if(par[i - 1][pa] != -1){
				par[i][j] = par[i - 1][pa];
			}
		}
	}

	cin >> q;

	for (int i = 0; i < q; ++i) {
		cin >> ba >> bb;

		int lca = qu(ba, bb);
		printf("%d\n", dis[ba] + dis[bb] - 2 * dis[lca]);
	}
}
